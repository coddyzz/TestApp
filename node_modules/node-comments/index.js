/**
 * Created by thimpat on 03/11/2015.
 */

/*
// That was for the middleware
module.exports = function() {

    return function(req, res, next)
    {
        console.log(req.body);
        console.log(req.query);
        next();
    }
};
*/

(function()
{
    'use strict';

    var express,
        router,
        config,
        jsonfile,
        path,
        fileExists;

    express = require('express');
    router = express.Router();
    jsonfile = require('jsonfile');
    fileExists = require('file-exists');
    path = require('path');

    jsonfile.spaces = 4;

    function sendError(res)
    {
        res.status(400);
        res.json({data: 'failed'});
    }

    function convertToId(idpage)
    {
        idpage = idpage.replace(/(http:){0,1}\/*[^\/]+\//g, '');        // remove http://..../
        idpage = idpage.replace(/\/$/g, '');                            // remove last /
        idpage = idpage.replace(/\//g, '-');                         // replace / with -
        return idpage;
    }

    function getFilepathFromID(idpage)
    {
        var filepath, filename;
        idpage = convertToId(idpage);
        filename = 'data';
        if (idpage)
        {
            filename = filename + '-' + idpage;
        }

        filepath = path.join(config.dbpath, filename + '.json');
        return filepath;
    }

    function getData(idpage)
    {
        var filepath,
            dataComments;

        filepath = getFilepathFromID(idpage);
        if (!fileExists(filepath))
        {
            dataComments = [];
        }
        else
        {
            dataComments = jsonfile.readFileSync(filepath) || [];
        }
        return dataComments;
    }


    function saveData(idpage, obj, successCb, errorCb)
    {
        var filepath;
        filepath = getFilepathFromID(idpage);
        jsonfile.writeFile(filepath, obj, function (err)
        {
            if (err)
            {
                errorCb && errorCb();
                return false;
            }
            successCb && successCb();
        });
    }

    router.get('/all', function(req, res, next){
        var all,
            idpage;
        idpage = req.headers.referer;
        all = getData(idpage);
        if (config.mongodb)
        {
            // Save to MongoDB database
        }
        else
        {
            res.json(all);
        }
    });

    router.post('/add', function (req, res, next)
    {
        var idPage,
            all;
        if (config.mongodb)
        {
            // Save to MongoDB database
        }
        else
        {
            // Save to file
            idPage = req.headers.referer;

            all = getData(idPage);
            all.push(req.body);
            saveData(
                idPage,
                all,
                function()
                {
                    res.json({data: 'success'});
                },
                function()
                {
                    sendError(res);
                }
            );
        }
    });

    router.post('/update', function(req, res, next){
        var all,
            n, i, k, id, idpage;
        id = req.body.id;

        idpage = req.headers.referer;

        if (config.mongodb)
        {
            // Save to MongoDB database
        }
        else
        {
            all = getData(idpage);
            n = all.length;
            for (i = 0; i < n; ++i)
            {
                k = all[i];
                if (id === k.id)
                {
                    all[i] = req.body;
                    saveData(
                        idpage,
                        all,
                        function()
                        {
                            res.json({data: 'success'});
                        },
                        function()
                        {
                            sendError(res);
                        });
                    break;
                }
            }
        }
    });

    router.post('/delete', function(req, res, next)
    {
        var all,
            n, i, k, id, idpage;
        id = req.body.id;
        idpage = req.headers.referer;

        if (config.mongodb)
        {
            // Save to MongoDB database
        }
        else
        {
            all = getData(idpage);
            n = all.length;
            for (i = n - 1; i >= 0; --i)
            {
                k = all[i];
                if (id === k.id)
                {
                    all.splice(i, 1);
                    continue;
                }

                if (id === k.parent)
                {
                    all.splice(i, 1);
                }
            }

            saveData(idpage, all,
                function()
                {
                    res.json({data: 'success'});
                },
                function()
                {
                    sendError(res);
                });
        }
    });

    module.exports.init = function (params)
    {
        config = params;
        config.dbpath = config.dbpath || './';
    };

    module.exports.routes = router;

}());
